const int N = 5;

// 递归函数
int factorial(int n) {
    if (n <= 1) {
        return 1;
    }
    return n * factorial(n - 1);
}

int main() {
    // ---------- 基本变量 ----------
    int a = 10, b = 3;
    int c;
    int i, j; // 将循环变量声明提前

    // ---------- 数值运算 ----------
    c = a + b * 2 - (a / b) % 2;   
    

    c = c << 1;
    c = c | 5;
    c = c & 7;
    c = ~c;
    
    putf("c = %d\n", c); // 使用 putf 进行格式化输出

    // ---------- 条件与短路 ----------
    if (a > b && b > 0 || a == 0) {   
        c = 42;
    } else {
        c = -1;
    }
    putf("Conditional result c = %d\n", c);

    // ---------- 循环 ----------
    int sum = 0;
    for (i = 0; i < N; i = i + 1) {
        if (i == 2) continue;   
        if (i == 4) break;      
        sum = sum + i;
    }
    putf("Sum after for loop = %d\n", sum);

    j = 0;
    while (j < 3) {             
        sum = sum + j;
        j = j + 1;
    }
    putf("Sum after while loop = %d\n", sum);

    // ---------- 数组 ----------
    int arr[5];
    int mat[2][3];

    // 一维数组赋值与访问
    for (i = 0; i < N; i = i + 1) {
        arr[i] = i * i;
    }
    putf("Array arr: ");
    for (i = 0; i < N; i = i + 1) {
        putf("%d ", arr[i]); // 循环打印数组元素
    }
    putch(10); // 使用 putch 输出换行符 (ASCII 10)

    // 二维数组赋值与访问
    for (i = 0; i < 2; i = i + 1) {
        for (j = 0; j < 3; j = j + 1) {
            mat[i][j] = i + j;
        }
    }
    putf("Matrix mat:\n");
    for (i = 0; i < 2; i = i + 1) {
        for (j = 0; j < 3; j = j + 1) {
            putf("%d ", mat[i][j]);
        }
        putch(10); // 每打印完一行后换行
    }

    // ---------- 递归函数 ----------
    int f = factorial(5);
    putf("factorial(5) = %d\n", f);

    return 0;
}